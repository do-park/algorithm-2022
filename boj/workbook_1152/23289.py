import sys
sys.stdin = open('23289.txt')

# 출력: 구사과가 먹는 초콜릿의 개수, 100개를 넘어가면 101을 출력
# 조건
# 1. 집에 있는 모든 온풍기에서 바람이 한 번 나옴
#    이때 온풍기가 2대 이상인 경우, 각각의 온풍기에 의해 상승한 온도를 모두
#    합한 값이 해당 칸의 상승한 온도
# 2. 온도가 조절됨
#    모든 인접한 칸에 대해서, 온도가 높은 칸에서 낮은 칸으로 [두 칸의 온도의 차이/4]의 내림만큼 온도가 조절된다.
#    온도가 높은 칸은 이 값만큼 온도가 감소하고, 낮은 칸은 온도가 상승한다.
#    인접한 두 칸 사이에 벽이 있는 경우 온도가 조절되지 않는다.
# 3. 온도가 1 이상인 가장 바깥쪽 칸의 온도가 1씩 감소
# 4. 초콜릿을 하나 먹는다.
# 5. 조사하는 모든 칸의 온도가 k 이상이 되었는지 검사.
#    모든 칸의 온도가 k 이상이면 테스트를 중단하고, 아니면 1부터 다시 시작한다.

# 입력
# room 0 빈칸 1 오른쪽 온풍기 2 왼쪽 온풍기 3 위쪽 온풍기 4 아래쪽 온풍기 5 온도 조사칸
R, C, K = map(int, input().split())
room = [list(map(int, input().split())) for _ in range(R)]
# wall (y, x, t) t == 0 ? (y, x) (y-1, x) 사이에 벽 : (y, x) (y, x+1) 사이에 벽
W = int(input())
walls = [list(map(int, input().split())) for _ in range(W)]

heaters = [[], [], [], [], []]
checks = []
for r in range(R):
    for c in range(C):
        if 1 <= room[r][c] <= 4:
            heaters[room[r][c]].append((r, c))
        elif room[r][c] == 5:
            checks.append((r, c))

print('heaters')
for i in heaters:
    print(i)

print('check')
print(checks)

# 온풍기
heat_ranges = [
    [],
    # 온풍기 오른쪽으로 바람
    [(0, 1),
     (-1, 2), (0, 2), (1, 2),
     (-2, 3), (-1, 3), (0, 3), (1, 3), (2, 3),
     (-3, 4), (-2, 4), (-1, 4), (0, 4), (1, 4), (2, 4), (3, 4),
     (-4, 5), (-3, 5), (-2, 5), (-1, 5), (0, 5), (1, 5), (2, 5), (3, 5), (4, 5)],
    # 온풍기 왼쪽으로 바람
    [(0, -1),
     (-1, -2), (0, -2), (1, -2),
     (-2, -3), (-1, -3), (0, -3), (1, -3), (2, -3),
     (-3, -4), (-2, -4), (-1, -4), (0, -4), (1, -4), (2, -4), (3, -4),
     (-4, -5), (-3, -5), (-2, -5), (-1, -5), (0, -5), (1, -5), (2, -5), (3, -5), (4, -5)],
    # 온풍기 위로 바람
    [(-1, 0),
     (-2, -1), (-2, 0), (-2, 1),
     (-3, -2), (-3, -1), (-3, 0), (-3, 1), (-3, 2),
     (-4, -3), (-4, -2), (-4, -1), (-4, 0), (-4, 1), (-4, 2), (-4, 3),
     (-5, -4), (-5, -3), (-5, -2), (-5, -1), (-5, 0), (-5, 1), (-5, 2), (-5, 3), (-5, 4)],
    # 온풍기 밑으로 바람
    [(1, 0),
      (2, -1), (2, 0), (2, 1),
      (3, -2), (3, -1), (3, 0), (3, 1), (3, 2),
      (4, -3), (4, -2), (4, -1), (4, 0), (4, 1), (4, 2), (4, 3),
      (5, -4), (5, -3), (5, -2), (5, -1), (5, 0), (5, 1), (5, 2), (5, 3), (5, 4)],
]
heats = [5, 4, 4, 4, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]

# 1. 집에 있는 모든 온풍기에서 바람이 한 번 나옴
#    이때 온풍기가 2대 이상인 경우, 각각의 온풍기에 의해 상승한 온도를 모두
#    합한 값이 해당 칸의 상승한 온도
# 2. 온도가 조절됨
#    모든 인접한 칸에 대해서, 온도가 높은 칸에서 낮은 칸으로 [두 칸의 온도의 차이/4]의 내림만큼 온도가 조절된다.
#    온도가 높은 칸은 이 값만큼 온도가 감소하고, 낮은 칸은 온도가 상승한다.
#    인접한 두 칸 사이에 벽이 있는 경우 온도가 조절되지 않는다.
# 3. 온도가 1 이상인 가장 바깥쪽 칸의 온도가 1씩 감소
# 4. 초콜릿을 하나 먹는다.
# 5. 조사하는 모든 칸의 온도가 k 이상이 되었는지 검사.
#    모든 칸의 온도가 k 이상이면 테스트를 중단하고, 아니면 1부터 다시 시작한다.

dys = [-1, 0, 1, 0]
dxs = [0, -1, 0, 1]
choco = 0
while True:
    if choco > 100:
        print(101)
        break
    temp_room = [[0] * C for _ in range(R)]
    # 5. 조사하는 모든 칸의 온도가 k 이상이 되었는지 검사.
    #    모든 칸의 온도가 k 이상이면 테스트를 중단하고, 아니면 1부터 다시 시작한다.
    count = 0
    for (y, x) in checks:
        if room[y][x] >= K:
            count += 1
    if count == len(checks):
        print(choco)
        break
    # 1. 집에 있는 모든 온풍기에서 바람이 한 번 나옴
    #    이때 온풍기가 2대 이상인 경우, 각각의 온풍기에 의해 상승한 온도를 모두
    #    합한 값이 해당 칸의 상승한 온도
    for i in range(1, 5):
        heater = heaters[i]
        heat_range = heat_ranges[i]
        for (y, x) in heater:
            for j in range(25):
                dy, dx = heat_range[j]
                ny, nx = y + dy, x + dx
                if 0 <= ny < R and 0 <= nx < C:
                    room[ny][nx] += heats[j]
    # 2. 온도가 조절됨
    #    모든 인접한 칸에 대해서, 온도가 높은 칸에서 낮은 칸으로 [두 칸의 온도의 차이/4]의 내림만큼 온도가 조절된다.
    #    온도가 높은 칸은 이 값만큼 온도가 감소하고, 낮은 칸은 온도가 상승한다.
    #    인접한 두 칸 사이에 벽이 있는 경우 온도가 조절되지 않는다.
    for r in range(R):
        for c in range(C):
            for dr, dc in zip(dys, dxs):
                nr, nc = r + dr, c + dc
                if 0 <= nr < R and 0 <= nc < C:

